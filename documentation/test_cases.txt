** echo **
echo

echo hallo daar

"echo" hallo daar

echo "hallo daar"

"echo' hallo daar                   --> Error multiple line command (wacht op error functie sophie)

echo hallo daar | echo hoi maran

echo hallo daar ; echo hoi maran

echo hallo >file1 >file2

echo hallo >file1 >file2 maran

echo hallo >file1 >file2 >>file3 maran siemons

echo hallo <file1 >file2




echo $USER""			-->msiemons
echo $USER"				-->not closed

echo $USER_


***************************
** 			cd 			**
***************************

1 niveau omhoog:
cd ..

HOME:
cd
cd ~/

Absoluut pad:
/Users/msiemons/Desktop/map_1

Relatief pad:
cd ../Documents/Git_maran


***************************
**		export			**
***************************

export
export ZZZ
export ZZZ=
export ZZZ=new_value
export ZZZ======new
export ZZZ=new YYY=new2 XXX===new3
export $USER
export TEST=$USER4857987345
export 123$USER---

***************************
**		export & env	**
***************************
1. export MARANSIEMONS
2. env						--> Niet in env zichtbaar

1. export MARANSIEMONS=lief
2. env						--> Wel in env zichtbaar


***************************
** 		Expansion		 **
***************************

echo $
echo $USER
echo $USER'				--> not complete
echo $USER_				--> underscore is alphanummeriek
echo 123$USER----
echo 123$USER----$

echo abc$USERdef
echo abc$USER123
echo abc$POEPdef

echo $USER "$USER" '$USER'
export TEST_$USER=hallo$LOGNAME

----------Niet bestaande $---------
echo $POEP

echo $POEP $MEERPOEP

echo hallo $POEP
hallo

echo $POEP hallo
hallo

***************************
** 		Flauw 			**
***************************

1. export TEST=/Users/maran/Desktop/minishell
2. cd $IETSONBESTAANDS				---> moet naar home Git_maran
3  cd $IETSONBESTAANDS	.. 			--->ignores eerste en gaat naar niveau hoger
4. cd $POEP $MEERPOEP ..

Dus als er een $ voorstaat en hij bestaat niet, dan wordt deze gedelete.


***************************
** 		Remco			**
***************************

Iets met \ en ctrl D

***************************
** 		Exit_codes		**
***************************
- Invalid identifiers testen: getallen, tekens, $ etc.
- Testen met echo $?
- 


echojhdfjhjdkh				-->127		bash: echojhdfjhjdkh: command not found

echo	[Weet niet hoe te testen]
cd poep						--> 1
pwd -k						--> 1		+ bash: pwd: -k: invalid option



unset -k					--> 2		+ ash: unset: -k: invalid option
unset						--> 0		Ik had foutcode verwacht, maar is niet.
unset %						--> 1		bash: unset: `%': not a valid identifier
unset 3						--> 1

***************************
** 		breek de boel		**
***************************
 echo | poep

 echo | cd .. | pwd

 echo
=======
***************************
** 		Maak helemaal kapot	**
***************************

echo
echo hoi
cd poep
ls 
"ls"
test

***************************
** 		Exit + exit_codes**
***************************
- Let op error_message + exit_code

exit
exit a
exit a 1
exit 99
exit 3 a
exit 55 99
=======

***************************
** 		Executables		**
***************************
/bin/ls
/binn/ls			--> No such file or directory

***************************
** 		Single quotes	**
***************************
echo hallo 'ma\"ran' siemons				--> X (Inconsistent?)
hallo ma\"ran siemons

echo hallo 'ma\'ran' siemons
Multiple line error

echo hallo 'ma\'ran'' siemons							
hallo ma\ran siemons						Hij ziet de \ niet als escape, print gewoon \

echo 'ma\'									Hij ziet de \ niet als escape, print gewoon \
ma\

echo 'hallo$USER'							
hallo$USER

echo 'hallo\$USER'
hallo\$USER

echo '\$?'
\$?

echo '$USER'
$USER

echo '\$USER'
\$USER

echo '"\$USER"'
"\$USER"

***************************
** 		Double quotes	**
***************************

echo "hallo"maran"
Multiple line error

echo "\poep"
\poep
echo \poep
poep

echo "poep\""
poep"
echo "poep\'"
poep\'

echo "poep\"
multiple line error

echo "hallo\"\poep"
hallo"\poep

echo hallo""
hallo

echo "hoi$USERmaran"					--> !
hoi

echo "$USER"
maran

echo "'\$USER'"
'$USER'				

------------------------
echo "\$USER"							
$USER

echo "123\"456"
123"456

echo "\poep"
\poep
------------------------

echo "123\'456"
123\'456

echo "hallo$"
hallo$
***************************
** 		Escape character**
***************************

echo \"
"

echo \$?
$?

echo 123\poep
123poep

***************************
** 		Combined		**					MEER COMBINED TESTEN, LANGERE ZINNEN
***************************

echo '$USER'$USER
$USERmaran

echo '$USER'$USER\$USER/"$USER"
$USERmaran$USER/maran

echo hallo"1234"maran"$USER"'/$USER'"/$USER"'poep''poep2'"maran"'ellende'END
hallo1234maranmaran/$USER/maranpoeppoep2maranellendeEND

echo "$USER"'/$USER'
maran/$USER

echo 'poep''poep2'"maran"'ellende'END
poeppoep2maranellendeEND

echo 'poep2'"maran"'ellende'
poep2maranellende

echo 123"hallo$"456
123hallo$456


***************************
** 	TESTS VAN BORIS      **
***************************

export kip=ei=koe===melk											check
echo $1234															X segfault
echo $_1234															check
export 1hello_world													check	[Wel naar foutmelding kijken]
echo "\""															check
echo "\"															check
exit 1 2 3															check
exit hello															check
exit 1 hello														check
export LS="ls -la";$LS												X laat geen lijst zien
echo > file1 hello >file2 world! > file3 | cat -e					X maakt files niet aan en cat werk niet goed
ls >> file3 | cat < file3											X cat doet het in bash niet. Ik snap niet waarom niet.
;																	X niet de juiste foutmelding
> file																X maakt geen file aan en foutmelding
ls >>>>>>>>>>> file													X bij ons maakt hij onterecht files aan met de naam >
echo hoi -n															check
cd "\$HOME"															check
unset PATH;ls														X bij ons doet ls het nog, maar is dat niet logisch omdat het een builtin is?				(/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin)

check exit status everywhere, for example try and chmod 000 an executable and then try to execute it and check the exit status.					X wij krijgen exit status 1 ipv 126
try to type something after your prompt then sending EOF (ctrl-d)																				[Sophie mee bezig]	

***************************
** 	NOG OP TE LOSSEN (?) **
***************************
----------------
SOWIESO OPLOSSEN
----------------
export YYY=echo
$YYY hallo

Relative Path																					
- Execute commands but this time use a relative path
- Repeat multiple times in multiple directories with complex relative path (lots of ..)

getest met:
Vanuit /Users
../bin/echo poep										-->zou het moeten doen.

echo DOET HET NIET >> test1 | cat test1					--> DOET HET NIET wordt niet toegevoegd aan test1 !!!
echo maran >test6 | cat <test6							-->	Bij ons maakt hij nu geen nieuwe test6 aan?

echo $1234

--------------
DEZE OOK?
--------------
$USER
bash: maran: command not found					--> voor foutmelding al expanden?

echo “$USER”‘/$USER’

./
bash: ./: is a directory

