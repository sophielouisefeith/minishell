** echo **
echo

echo hallo daar

"echo" hallo daar

echo "hallo daar"

"echo' hallo daar                   --> Error multiple line command (wacht op error functie sophie)

echo hallo daar | echo hoi maran

echo hallo daar ; echo hoi maran

echo hallo >file1 >file2

echo hallo >file1 >file2 maran

echo hallo >file1 >file2 >>file3 maran siemons

echo hallo <file1 >file2




echo $USER""			-->msiemons
echo $USER"				-->not closed

echo $USER_


***************************
** 			cd 			**
***************************

1 niveau omhoog:
cd ..

HOME:
cd
cd ~/

Absoluut pad:
/Users/msiemons/Desktop/map_1

Relatief pad:
cd ../Documents/Git_maran


***************************
**		export			**
***************************

export
export ZZZ
export ZZZ=
export ZZZ=new_value
export ZZZ======new
export ZZZ=new YYY=new2 XXX===new3
export $USER
export TEST=$USER4857987345
export 123$USER---

***************************
**		export & env	**
***************************
1. export MARANSIEMONS
2. env						--> Niet in env zichtbaar

1. export MARANSIEMONS=lief
2. env						--> Wel in env zichtbaar


***************************
** 		Expansion		 **
***************************

echo $
echo $USER              --> moet nog een foutmelding voor komen 
echo $USER'				--> not complete
echo $USER_				--> underscore is alphanummeriek
echo 123$USER----
echo 123$USER----$

echo abc$USERdef
echo abc$USER123
echo abc$POEPdef

echo $USER "$USER" '$USER'
export TEST_$USER=hallo$LOGNAME

----------Niet bestaande $---------
echo $POEP

echo $POEP $MEERPOEP

echo hallo $POEP
hallo

echo $POEP hallo
hallo

***************************
** 		Flauw 			**
***************************

1. export TEST=/Users/maran/Desktop/minishell
2. cd $IETSONBESTAANDS				---> moet naar home Git_maran
3  cd $IETSONBESTAANDS	.. 			--->ignores eerste en gaat naar niveau hoger
4. cd $POEP $MEERPOEP ..

Dus als er een $ voorstaat en hij bestaat niet, dan wordt deze gedelete.


***************************
** 		Remco			**
***************************

Iets met \ en ctrl D

***************************
** 		Exit_codes		**
***************************
- Invalid identifiers testen: getallen, tekens, $ etc.
- Testen met echo $?
- 


echojhdfjhjdkh				-->127		bash: echojhdfjhjdkh: command not found

echo	[Weet niet hoe te testen]
cd poep						--> 1
pwd -k						--> 1		+ bash: pwd: -k: invalid option



unset -k					--> 2		+ ash: unset: -k: invalid option
unset						--> 0		Ik had foutcode verwacht, maar is niet.
unset %						--> 1		bash: unset: `%': not a valid identifier
unset 3						--> 1

***************************
** 		breek de boel		**
***************************
 echo | poep

 echo | cd .. | pwd

 echo
=======
***************************
** 		Maak helemaal kapot	**
***************************

echo
echo hoi
cd poep
ls 
"ls"
test

***************************
** 		Exit + exit_codes**
***************************
- Let op error_message + exit_code

exit
exit a
exit a 1
exit 99
exit 3 a
exit 55 99
=======

***************************
** 		Executables		**
***************************
/bin/ls
/binn/ls			--> No such file or directory

***************************
** 		Single quotes	**
***************************
echo hallo 'ma\"ran' siemons				--> X (Inconsistent?)
hallo ma\"ran siemons

echo hallo 'ma\'ran' siemons
Multiple line error

echo hallo 'ma\'ran'' siemons							
hallo ma\ran siemons						Hij ziet de \ niet als escape, print gewoon \

echo 'ma\'									Hij ziet de \ niet als escape, print gewoon \
ma\

echo 'hallo$USER'							
hallo$USER

echo 'hallo\$USER'
hallo\$USER

echo '\$?'
\$?

echo '$USER'
$USER

echo '\$USER'
\$USER

echo '"\$USER"'
"\$USER"

***************************
** 		Double quotes	**
***************************

echo "hallo"maran"
Multiple line error

echo "\poep"
\poep
echo \poep
poep

echo "poep\""
poep"
echo "poep\'"
poep\'

echo "poep\"
multiple line error

echo "hallo\"\poep"
hallo"\poep

echo hallo""
hallo

echo "hoi$USERmaran"					--> !
hoi

echo "$USER"
maran

echo "'\$USER'"
'$USER'				

------------------------
echo "\$USER"							
$USER

echo "123\"456"
123"456

echo "\poep"
\poep
------------------------

echo "123\'456"
123\'456

echo "hallo$"                                                   check
hallo$
***************************
** 		Escape character**
***************************

echo \"
"

echo \$?                                                        check
$?

echo 123\poep                                                    check
123poep

***************************
** 		Combined		**					MEER COMBINED TESTEN, LANGERE ZINNEN
***************************

echo '$USER'$USER
$USERmaran

echo '$USER'$USER\$USER/"$USER"
$USERmaran$USER/maran

echo hallo"1234"maran"$USER"'/$USER'"/$USER"'poep''poep2'"maran"'ellende'END
hallo1234maranmaran/$USER/maranpoeppoep2maranellendeEND

echo "$USER"'/$USER'
maran/$USER

echo 'poep''poep2'"maran"'ellende'END
poeppoep2maranellendeEND

echo 'poep2'"maran"'ellende'
poep2maranellende

echo 123"hallo$"456
123hallo$456


***************************
** 	TESTS VAN BORIS      **
***************************

export kip=ei=koe===melk											Check
echo $1234															X segfault 								[Sop]
echo $_1234															Check
export 1hello_world													Check	[Wel naar foutmelding kijken] 	[Sop]
echo "\""															Check
echo "\"															Check
exit 1 2 3															Check
exit hello															Check
exit 1 hello														Check
export LS="ls -la";$LS												Check
echo > file1 hello >file2 world! > file3 | cat -e					Check
ls >> file3 | cat < file3											Check
;																	X niet de juiste foutmelding			[Sop]
> file																Check
ls >>>>>>>>>>> file													Semi-check (nu nog 5x foutmelding door niet bestaande error structuur)
echo hoi -n															Check
cd "\$HOME"															Check
unset PATH;ls														Check

check exit status everywhere, for example try and chmod 000 an executable and then try to execute it and check the exit status.				Check [Nog niet everywhere getest, wel de chmod 000]
try to type something after your prompt then sending EOF (ctrl-d)																			Check	

***************************
** 	Meer executables/commands **
***************************
Relative Path																					
- Execute commands but this time use a relative path				Check

Getest met:
Vanuit /Users
../bin/echo poep													Check

Vanuit THE_minishell
../../../../bin/echo hallo											Check
../../../../bin/ls													Check

In Users/maran executable hello_world
Vanuit THE_minishell
 ../../hello_world													Check

***************************
** 	NOG OP TE LOSSEN (?) **
***************************

export YYY=echo														Check
$YYY hallo

echo DOET HET NIET >> test1 | cat test1								Check
echo maran >test6 | cat <test6										Check

echo POEP >>test6 | cat < test6 |grep P1OEP							Check
cat test6 | grep POEP												Check

echo $???															[Sop]
echo $/																[Sop]

--------------
DEZE OOK?
--------------
$USER
bash: maran: command not found					--> voor foutmelding al expanden?

echo “$USER”‘/$USER’

./
bash: ./: is a directory


*********************
*	New ontdekt *
*********************
$echo hallo															Check
$echo																Check [Werkend, maar wel nog kijken waarom array huls niet goed verwijderd wordt]
export $POEP									--> Seg?
export $POEP="ls -la"
< POEP																Check
ascii 96 grave accent ` checken of deze ook wordt gezien als quote	[NIET BEHANDELEN]

Dubbel \\ in " " bijv "\\poep"										...

echo $> 															Check

export _YYY=----------------------------------------				--> start met underscore moet wel worden toegevoegd

*********************
*	Pipes and semi's *
*********************
Rijtje testen: (rm y1 y2 x1 x2 x3)

echo hallo
echo hallo | echo hoi
echo hallo ; echo hoi

echo hallo >x1 >x2 >x3 | echo hoi					
echo hallo >x1 >x2 >x3 ; echo hoi					

echo hallo | echo poep >x1 >x2						
echo hallo ; echo poep >x1 >x2						

echo hallo | echo hoi | cat
echo hallo | echo hoi > y1 >y2 | cat -e
echo hoi > y1 >y2 ; cat -e
echo hallo | echo hoi > y1 >y2 ; cat -e

ls > x1 | cat x1 | grep makefile				--> inconsistent in de echt bash
cat x1 | grep Makefile
ls > x1 ; cat x1 | grep main

TO DO:
Wat als met andere comments dan echo?
Testen on <


----------
Deze ook nog fixen:
-------------------

Die echo $???  heb ik trouwens wel een idee over.
In de expand functie check ik heel goed of er nog iets na de env var komt. Bijv. $USERhallosophie.
Dit gebeurt bij vraagteken natuurlijk niet.

15:49
Ik denk dat we die $? $getal breder moeten fixen. Want dit geldt ook voor echo $*hallo
15:49
Moeten we gewoon allemaal in expand gaan checken denk ik

sfeith  15:50
oke you right was die value nu aan het vullen if =? en dan zegmaar verdeer vullen met een substr.
15:50
maar indd *hallo zelfde principe.
15:51
eentje eraf.
15:51
oke.

msiemons  15:51
en echo $A*aap  ook. Dus het is echt alle tekst na onbestaande $ of niet geldige $


-----------------------
Expand/if_dollar test:
-----------------------
echo $USERhallo
echo $2$*
echo $hallo"poep"
echo /$"123$USER"
echo $222
echo hallo$USER****$USER$2$*
echo $a5aap
----
echo $_poep						--> Check
echo $USER_						-->Check, seg zat in parameter_not_exist
hallo$USER						--> Nog expanden?
echo $!$*						[$! is special, we don't treat this case]
echo "$!$*"						[$! is special]
echo $####jgklj					[$# is special, we don't treat this case]
echo "$####jgklj"				[$# is special]
echo "123$USER----"				--> MALLOC ERROR (Malloc errors alleen op comp maran?)
echo "$####jgklj$USER"			--> MALLOC ERROR
echo "$123456789$USER"			--> MALLOC ERROR
echo "123$USER----$"			--> MALLOC ERROR
$"etet"						X		[Wacht op error afwerking]			
-----
Groep 0 tests:

echo hallo$\abc
hallo$abc
echo hallo$\\abc
hallo$\abc

echo hallo$"USER"
halloUSER
echo hallo$"POEP"
halloPOEP
echo hallo$'USER'
halloUSER
----------
echo hallo\$USER
hallo$USER
---------
Groep 1 tests:
echo /$"123$USER"
/123maran

echo hallo/$USER
hallo/maran
-----
echo $halllo###
echo $USER9582309582529
echo $
echo $USER
echo $USER'	
echo 123$USER----
echo 123$USER----$		
echo abc$USERdef
echo abc$USER123
echo abc$POEPdef
echo $%%%%jlkjtwejt				
echo %%$
echo $####jgklj$USER		[special]
echo $@@@lkgj
------Same maar met $ in quotes:----------
echo $"USERhallo"
echo "$2$*"
echo "$222"
echo "hallo$USER****$USER$2$*"
echo "$_poep"
echo "$a5aap"
echo "$halllo###"
echo "$USER9582309582529"
"hallo$USER"					--> Nog expanden?		

echo "$"						
echo hallo"$"abc				
hallo$abc
echo hallo"$POEP"abc			!
echo hallo"$USER"abc

echo "$USER"
echo "$USER'"	
echo "$USER_"
echo "abc$USERdef"
echo "abc$USER123"
echo "abc$POEPdef"
echo "$%%%%jlkjtwejt"
echo "%%$"
echo "$@@@lkgj"
echo $"hallo"
echo $hallo

echo $hallo"poep"	
echo "hallo\"\poep"			
echo $"etet"
“$rewtwet”
echo "$53535"
----------------------
$"
$'
echo “$\hallo”
echo $"\hallo"
\hallo
------------
Dubbel backslash in dubbel quotes:
echo "\\hallo"
\hallo
echo "hallo\\hoi"
hallo\hoi
echo "\\$USER"
\maran

----
Delete scape char alleen binnen dubbel quotes bij:

echo "123\"456"
123"456
echo "123\$456"
123$456
echo "123\`456"
123`456
echo "123\\456"
123\456

TOV bijv:
echo "123\!456"
123\!456

----
echo $\USER
$USER
echo $\POEP
$POEP
echo $AB\CD				X [Backslash hoeven we alleen binnen quotes]
CD

Tussen dubbel quotes blijft \ staan na $ (groep 2);
echo "$\USER"						
$\USER
echo "$\POEP"				
$\POEP
echo poep"$\USER"			
poep$\USER

echo '$\poep'
$\poep

echo "\hallo"
\hallo



---------------------------
Specials dus we dus NIET meer behandelen:
#
echo #
echo $#
echo *
echo !!
!2
echo $_
----------------------------
Niet zoveel getest met single quotes!


*******************************
*	Strange pipe dilemma 8/10 *
*******************************
Werkt niet:
export POEP="ls -la"
echo hoi | $POEP

export POEP="grep main"
ls > x1 ; cat x1 | $POEP












• $halllo###
• $hallo>       deze lijkt te seggen voordat hij parameter expansion in gaat
• echo $"rlwjkrw\\"
• 
• 
• $USER9582309582529  segt.
• hallo$USER
bash: hallo$USER: command not found
moet een andere foutmelding geven 
