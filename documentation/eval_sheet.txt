eval sheet Minishell

Simple Command
- Execute a simple command with an absolute path like /bin/ls or any other command without options
 Yes
 No

Arguments
- Execute a simple command with an absolute path like /bin/ls or any other command with arguments but without quotes and double quotes
- Repeat multiple times with different commands and arguments
 Yes
 No

echo
- Execute the echo command with or without arguments or options
- Repeat multiple times with different arguments
 Yes
 No

exit
- Execute exit command with or without arguments
- Repeat multiple times with different arguments
- Don't forget to relaunch the minishell
 Yes
 No

Return value of a process
- Execute a simple command with absolute path like /bin/ls or any other command with arguments but without quotes and double quotes then execute echo $?
- Check the printed value. You can repeat the same in bash and compare it.
- Repeat multiple times with different commands and arguments, use some failing commands like '/bin/ls filethatdoesntexist'
 Yes
 No

Semicolons
- Execute multiple simple commands with absolute path with arguments but separate them with semicolons
- Repeat multiple times with different commands and don't forget to try with or without whitespaces around the semicolons
 Yes
 No

Signals
- Try ctrl-C in an empty prompt
- Try ctrl-\ in an empty prompt
- Try ctrl-D in an empty prompt
- Try ctrl-C in a prompt after you wrote some stuff
- Try ctrl-D in a prompt after you wrote some stuff
- Try ctrl-\ in a prompt after you wrote some stuff
- Try ctrl-C after running a blocking command like cat or grep without arguments
- Try ctrl-\ after running a blocking command like cat or grep without arguments
- Try ctrl-D after running a blocking command like cat or grep without arguments
- Repeat multiple times with different commands
 Yes
 No

Double Quotes
- Execute a simple command with absolute path with arguments but this time double quotes (you should include whitespaces and semicolons in the quotes)
- Think about empty arguments or a weird use of '\'
- Do not try multiline strings
 Yes
 No
env

- Check if env shows you the current environment variables
 Yes
 No

export
- Export environment variables, create new ones and replace old ones
- Check them with env
 Yes
 No
unset
- Export environment variables, create new ones and replace old ones
- Use unset to remove some of them
- Check the result with env
 Yes
 No
Environment Variables
- Execute echo with some $ variables as arguments
- Check if double quotes around $ variables is working correctly (like in bash)
 Yes
 No
cd
- Use the command cd to move the working directory and check if you are in the right directory with /bin/ls
- Repeat multiple times with working and not working cd
- try '.' '..' as arguments too
 Yes
 No
pwd
- Use the command pwd
- Repeat multiple times in multiple directories
 Yes
 No
Relative Path
- Execute commands but this time use a relative path
- Repeat multiple times in multiple directories with complex relative path (lots of ..)
 Yes
 No
Environment Path
- Execute commands but this time without any path. (ls, wc, awk etc...)
- Unset the $PATH and check if it is not working anymore
- Set the $PATH to a multiple directory value (directory1:directory2) and check that directories are checked in order from left to right
 Yes
 No
Simple Quotes
- Execute commands with simple quotes as argument
- Try empty arguments
- Try environment variables, whitespaces and semicolons in the simple quotes
 Yes
 No
Redirection
- Execute commands with redirections < and/or >
- Repeat multiple times with different commands and arguments and sometimes change > with >>
- Check if multiple of the same redirections fail
 Yes
 No
Pipes
- Execute commands with pipes like 'cat file | grep bla | more'
- Repeat multiple times with different commands and arguments
- Try some failing commands like 'ls filethatdoesntexist | grep bla | more'
- Try to mix pipes and redirections.
 Yes
 No

Go Crazy
- Execute commands that should not work like 'dsbksdgbksdghsd' and check if the shell doesn't crash and prints an error
- Try to execute a really really really long command with a ton of arguments
- Have fun with that beautiful minishell and enjoy it
 Yes
 No











